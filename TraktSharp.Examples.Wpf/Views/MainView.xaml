<Window x:Class="TraktSharp.Examples.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:vm="clr-namespace:TraktSharp.Examples.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
		Closing="Window_Closing"
        Title="TraktSharp Examples" Width="1000" Height="600" MinWidth="1000" MinHeight="600" Icon="/Icons/TraktSharp.ico">
	
	<Window.Resources>
		
		<system:Double x:Key="ControlHeight">28</system:Double>
		
		<Style TargetType="TextBox">
			<Setter Property="Height" Value="{StaticResource ControlHeight}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="5,0" />
		</Style>

		<Style TargetType="ComboBox">
			<Setter Property="Height" Value="{StaticResource ControlHeight}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>

		<Style TargetType="Button">
			<Setter Property="Height" Value="{StaticResource ControlHeight}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="20,0" />
		</Style>

		<Style TargetType="Label">
			<Setter Property="Width" Value="120" />
			<Setter Property="Height" Value="{StaticResource ControlHeight}" />
			<Setter Property="Padding" Value="0,0,10,0"/>
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Right" />
		</Style>

		<Style x:Key="OutputTextBoxStyle" TargetType="TextBox">
			<Setter Property="IsReadOnly" Value="True" />
			<Setter Property="Padding" Value="10" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="FontFamily" Value="Consolas" />
		</Style>
		
		<Style x:Key="OutputScrollViewerStyle" TargetType="ScrollViewer">
			<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="Background" Value="White" />
		</Style>
		
	</Window.Resources>
	
	<Grid>
		<TabControl Margin="10" SelectedIndex="{Binding SelectedMainTab}">
			<TabItem Header="Authenticate">
				<StackPanel Margin="10" VerticalAlignment="Top">
					<WrapPanel Margin="5">
						<Label Width="120" HorizontalContentAlignment="Right" Content="Username:" />
						<TextBox Width="500" Text="{Binding Username}" />
					</WrapPanel>
					<WrapPanel Margin="5">
						<Label Width="120" HorizontalContentAlignment="Right" Content="Client ID:" />
						<TextBox Width="500" Text="{Binding ClientId, UpdateSourceTrigger=PropertyChanged}" />
					</WrapPanel>
					<WrapPanel Margin="5">
						<Label Width="120" HorizontalContentAlignment="Right" Content="Client Secret:" />
						<TextBox Width="500" Text="{Binding ClientSecret, UpdateSourceTrigger=PropertyChanged}" />
					</WrapPanel>
					<WrapPanel  Margin="125,5,5,5">
						<Button Content="Authorize" Width="Auto" Padding="20,0" Click="Authorize_Click" IsEnabled="{Binding CanAuthorize}" />
						<Label Width="Auto" Margin="10,0,0,0" Content="Enter client ID and client secret to enable authorization"
							   Visibility="{Binding CanAuthorize, Converter={StaticResource InverseBoolToVisConverter}}" />
					</WrapPanel>
					<WrapPanel Margin="5">
						<Label Width="120" HorizontalContentAlignment="Right" Content="Authorization Code:" />
						<TextBox Width="500" Text="{Binding AuthorizationCode, Mode=OneWay}" IsReadOnly="True" />
					</WrapPanel>
					<WrapPanel Margin="5">
						<Label Content="Access Token:" />
						<TextBox Width="500" Text="{Binding AccessToken.AccessToken, Mode=OneWay}" IsReadOnly="True" />
					</WrapPanel>
				</StackPanel>
			</TabItem>
			<TabItem Header="Test API Methods">
				<DockPanel Margin="10">
					<GroupBox DockPanel.Dock="Top" Padding="10" Header="Issue a test request to the Trakt API">
						<DockPanel>
							<StackPanel DockPanel.Dock="Left" HorizontalAlignment="Left">
								<WrapPanel>
									<Label Width="60" Content="Request:" Padding="0,0,10,0"/>
									<ComboBox ItemsSource="{Binding TestRequestTypes}" SelectedValue="{Binding SelectedTestRequestType}" Margin="0,0,10,0" Width="400" />
									<Button Content="Test Request" Width="Auto" Padding="10,0" Click="TestRequest_Click" HorizontalAlignment="Left" />
								</WrapPanel>
								<WrapPanel Margin="0,10,0,0">
									<Label Width="60" Content="Search:" Padding="0,0,10,0"/>
									<TextBox Width="120" Margin="0,0,10,0" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" KeyDown="Search_KeyDown" />
									<ComboBox ItemsSource="{Binding TextQueryTypes}" SelectedValue="{Binding SelectedTextQueryType}" Margin="0,0,10,0" Width="100" 
												Visibility="{Binding IdLookup, Converter={StaticResource InverseBoolToVisConverter}}" />
									<ComboBox ItemsSource="{Binding IdLookupTypes}" SelectedValue="{Binding SelectedIdLookupType}" Margin="0,0,10,0" Width="100"
												Visibility="{Binding IdLookup, Converter={StaticResource BoolToVisConverter}}" />
									<CheckBox Content="ID lookup" VerticalAlignment="Center" Margin="0,0,10,0" IsChecked="{Binding IdLookup}" />
									<Button Content="Search" Width="Auto" Click="Search_Click" HorizontalAlignment="Left" IsEnabled="{Binding CanSearch}" />
								</WrapPanel>
							</StackPanel>
							<GroupBox Header="Settings to use in the request" HorizontalAlignment="Right" Padding="10">
								<StackPanel HorizontalAlignment="Right">
									<WrapPanel>
										<Label Width="70" Content="ID:" />
										<TextBox Text="{Binding TestId}" Width="120" KeyDown="TestId_KeyDown" />
									</WrapPanel>
									<WrapPanel Margin="0,10,0,0">
										<Label Width="70" Content="Extended:"/>
										<ComboBox ItemsSource="{Binding ExtendedOptions}" SelectedValue="{Binding SelectedExtendedOption}" Width="120" />
									</WrapPanel>
								</StackPanel>
							</GroupBox>
						</DockPanel>
					</GroupBox>
					<TabControl Margin="0,10,0,0" SelectedIndex="{Binding SelectedResponseTab}">
						<TabItem Header="Raw Request">
							<ScrollViewer Style="{StaticResource OutputScrollViewerStyle}">
								<TextBox Text="{Binding LastRequest, Mode=OneWay}" Style="{StaticResource OutputTextBoxStyle}"/>
							</ScrollViewer>
						</TabItem>
						<TabItem Header="Raw Response">
							<ScrollViewer Style="{StaticResource OutputScrollViewerStyle}">
								<TextBox Text="{Binding LastResponse, Mode=OneWay}" Style="{StaticResource OutputTextBoxStyle}" TextWrapping="Wrap"/>
							</ScrollViewer>
						</TabItem>
						<TabItem Header="Response JSON">
							<ScrollViewer Style="{StaticResource OutputScrollViewerStyle}">
								<TextBox Text="{Binding LastResponseJson, Mode=OneWay}" Style="{StaticResource OutputTextBoxStyle}"/>
							</ScrollViewer>
						</TabItem>
						<TabItem Header="Returned Value">
							<ScrollViewer Style="{StaticResource OutputScrollViewerStyle}">
								<TextBox Text="{Binding LastReturnedValue, Mode=OneWay}" Style="{StaticResource OutputTextBoxStyle}"/>
							</ScrollViewer>
						</TabItem>
					</TabControl>
				</DockPanel>
			</TabItem>
		</TabControl>
	</Grid>
</Window>